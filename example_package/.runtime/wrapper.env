#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Name:     wrapper.env
# Source:   https://github.com/princebot/pythonize
# Author:   prince@princebot.com
# Usage:    source wrapper.env
# Synopsis: Configuration for Python programs wrapped with pythonize --wrapper
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Details:  To separate concerns, it's recommended that you specify Python
#           dependencies for pythonize-wrapped programs (or set any custom
#           global variables) in this file rather than in the shell wrapper.
#           This also reduces the likelihood of inadvertently introducing bugs
#           in the shell wrapper source --- leave that to me.  ^.^
#
#           For more information about pythonize and making Python wrappers,
#           run pythonize --help to view its man page. You can also visit the
#           project page at https://github.com/princebot/pythonize.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


# Customize the global variables below for your pythonize-wrapped program:
#
#      PROG:         Set by default to use the shell wrapper's filename (which
#                    from your users' perspective will be the main executable)
#                    in console messages.
#      WRAPPED_PROG: Filepath of the wrapped Python program (by default, we
#                    expect <package_directory>.runtime/<program_name>.py)
#      PY_VERSION:   Python version required for the wrapped Python program,
#                    e.g., 2.7 (using just "2" or "3" without specifying a
#                    minor version number will match any Python 2.x or 3.x
#                    respectively). Python 3 is the default.
#      PY_PACKAGES:  Bash array of any Python packages outside the standard
#                    library that the wrapped Python script requires, e.g.,
#                    PY_PACKAGES=(requests boto3 flask) --- or PY_PACKAGES=()
#                    if you're only using Python's standard library.

PROG=$(basename "${BASH_SOURCE[1]}")
WRAPPED_PROG=$(dirname "${BASH_SOURCE[1]}")/.runtime/${PROG}.py
PY_VERSION=3
PY_PACKAGES=(colorama requests)

# Place any global variables you would like to have available in your Python
# program here, e.g., export PYTHONPATH=/path/to/custom/modules
